---
# Every test file has one or more tests...
test_name: Create a geocube and run bulk homogenization

# ...and each test has one or more stages (e.g. an HTTP request)
marks:
  - usefixtures:
      - clean_tables_from_db
includes:
  - !include common.yaml

# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: create client
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/clients"
      method: POST
      json:
        companyName: "test company name"

    # ...and the expected response code and body
    response:
      status_code: 200
      save:
        body:
          client_uuid: client.uuid


  - name: create project
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/projects"
      method: POST
      json:
        project:
          basin: "vaca-muerta"
          name: "test project"
          crs: "EPSG:5864"
          clientUuid: "{client_uuid:s}"

    # ...and the expected response code and body
    response:
      status_code: 200
      save:
        body:
          project_uuid: project.uuid


  - name: create geocube
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/stage"
      method: POST
      json:
        name: "test cube"
        projectUuid: "{project_uuid:s}"

    response:
      status_code: 200
      save:
        body:
          cube_uuid: uuid

  - name: add wells
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/{cube_uuid:s}/wells"
      method: POST
      json: !include data/homogenization/header-wells.yaml

    response:
      status_code: 200
      save:
        $ext:
          function: utilities.utils:get_well_uid

  - name: add data (well logs)
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/{cube_uuid:s}/wells/{well_uuid:s}/data"
      method: POST
      files:
        file: "data/homogenization/well_logs/PEL_NQ_APO-1001A_EDW_GEOMECHANICS.csv"
        type: 'RPE'
    response:
      status_code: 200

  - name: add input data (grid connection)
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/{cube_uuid:s}/inputs"
      method: POST
      files:
        file: "data/homogenization/BdP Well-Grid [Visage](AOI) (1) (1).csv"
        type: 'GRIDCONNECTION'
    response:
      status_code: 200

  - name: add input data  (interfaces)
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/{cube_uuid:s}/inputs"
      method: POST
      files:
        file: "data/homogenization/bars_all_ftB (1).csv"
        type: 'INTERFACES'
    response:
      status_code: 200

  - name: add input data  (pore pressure)
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/{cube_uuid:s}/inputs"
      method: POST
      files:
        file: "data/homogenization/pore_pressures_model (1).csv"
        type: 'POREPRESSURE'
    response:
      status_code: 200

  - name: edit homogenization settings
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/{cube_uuid:s}/homogenization"
      method: PUT
      json: !include data/homogenization/homogenizationsettings.yaml
    response:
      status_code: 200

  - name: run homogenization
    # Define the request to be made...
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/{cube_uuid:s}/homogenization/start"
      method: POST
      json: !include data/homogenization/homogenizationwells.yaml
    response:
      status_code: 200

  - name: verify successfull homogenization run
    # Define the request to be made...
    delay_before: 30
    request:
      url: "{toolkit-qa.host:s}/runs/geocube/{cube_uuid:s}"
      method: GET
    response:
      status_code: 200
      body:
        $ext:
          function: utilities.utils:assert_finish_status_homogenization
---